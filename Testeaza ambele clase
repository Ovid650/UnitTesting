using System;
using System.Collections.Generic;
using System.Linq;
using Xunit;

public class Program
{
    public static void Main()
    {
        // This Main method is not needed for unit tests but can be used to run your classes directly
        Console.WriteLine("This is a console application.");
    }
}

public class StringValidator
{
    public static bool IsValidEmail(string email)
    {
        return email.Contains("@") && email.Contains(".");
    }

    public static bool IsPhoneNumber(string phoneNumber)
    {
        return phoneNumber.Length == 10 && phoneNumber.All(char.IsDigit);
    }
}

public class ListManipulator
{
    public static int FindMax(List<int> numbers)
    {
        return numbers.Max();
    }

    public static List<int> RemoveDuplicates(List<int> numbers)
    {
        return numbers.Distinct().ToList();
    }
}

public class StringValidatorTests
{
    [Theory]
    [InlineData("test@example.com", true)]
    [InlineData("invalid-email", false)]
    [InlineData("test@example", false)]
    [InlineData("@example.com", false)]
    public void IsValidEmail_Test(string email, bool expected)
    {
        // Act
        bool result = StringValidator.IsValidEmail(email);

        // Assert
        Assert.Equal(expected, result);
    }

    [Theory]
    [InlineData("1234567890", true)]
    [InlineData("123456789", false)]
    [InlineData("123456789a", false)]
    [InlineData("abcdefghij", false)]
    public void IsPhoneNumber_Test(string phoneNumber, bool expected)
    {
        // Act
        bool result = StringValidator.IsPhoneNumber(phoneNumber);

        // Assert
        Assert.Equal(expected, result);
    }
}

public class ListManipulatorTests
{
    [Fact]
    public void FindMax_Test()
    {
        // Arrange
        var numbers = new List<int> { 1, 3, 5, 7, 9 };

        // Act
        int result = ListManipulator.FindMax(numbers);

        // Assert
        Assert.Equal(9, result);
    }

    [Fact]
    public void RemoveDuplicates_Test()
    {
        // Arrange
        var numbers = new List<int> { 1, 2, 2, 3, 4, 4, 5 };

        // Act
        var result = ListManipulator.RemoveDuplicates(numbers);

        // Assert
        var expected = new List<int> { 1, 2, 3, 4, 5 };
        Assert.Equal(expected, result);
    }
}
